**To-Do-suunnitelma: Dokumentaation automatisointi Cookiecutterilla, Docusauruksella ja CI/CD:llä**

**0. Projektipohjan (Cookiecutter Template) Suunnittelu ja Toteutus**
    *   [ ] Määrittele tarvittavat tiedostot ja kansiorakenne templateen:
        *   [ ] `.gitignore`
        *   [ ] `Dockerfile` (tarvittaessa)
        *   [ ] `README.md` (perusrunko)
        *   [ ] Docusaurus-perusrakenne (esim. `docs/` tai `docs-site/` sisältäen `docusaurus.config.js`, `sidebars.js`, esimerkkisivut `docs/intro.md`)
        *   [ ] `windsurf_config.yaml` (tai vastaava Windsurf-integraatiota varten, jos sovellettavissa)
        *   [ ] `.github/workflows/` -kansio valmiilla CI/CD-pohjalla (esim. `deploy-docs.yml`)
    *   [ ] Luo Cookiecutter-template, joka generoi yllä määritellyn projektirakenteen.
    *   [ ] Määrittele Cookiecutter-templatessa muuttujat (esim. `project_name`, `project_slug`, `author_name`, `description`, `github_username`, `github_repository_name`).
    *   [ ] Testaa Cookiecutter-templaten toimivuus luomalla sillä uusi esimerkkiprojekti.

**1. Uuden Dokumentaatioprojektin Alustus Cookiecutter-templatella**
    *   [ ] Varmista, että Cookiecutter on asennettu (`pip install cookiecutter`).
    *   [ ] Käytä luotua Cookiecutter-templatea uuden dokumentaatioprojektin luomiseen: `cookiecutter path/to/your/cookiecutter-template` (tai URL GitHubiin, jos template on siellä).
    *   [ ] Vastaa Cookiecutterin esittämiin kysymyksiin (projektin nimi, kuvaus jne.).
    *   [ ] Varmista, että generoitu projektirakenne on oikea ja vastaa odotuksia.
    *   [ ] Siirry generoituun projektikansioon: `cd <projektin-nimi>`.
    *   [ ] Alusta Git-repositorio generoidussa projektikansiossa (ellei template tee sitä automaattisesti): `git init`.

**2. Docusauruksen Konfigurointi ja Sisällön Luonti (Generoidussa Projektissa)**
    *   [ ] Siirry Docusaurus-projektin kansioon (esim. `cd docs-site` tai `cd docs` riippuen templaten rakenteesta).
    *   [ ] Asenna Docusaurus-riippuvuudet (jos template ei tee tätä osana jotain skriptiä): `npm install` (tai `npm ci` jos `package-lock.json` on olemassa ja halutaan tarkka asennus).
    *   [ ] Täydennä/muokkaa Docusauruksen dokumentteja (`.md`-tiedostot `docs/`-kansiossa) projektikohtaisella sisällöllä.
        *   [ ] `index.md` (tai vastaava aloitussivu)
        *   [ ] `installation.md`
        *   [ ] `api_reference.md` (harkitse automaattista generointia)
    *   [ ] Tarkista ja päivitä Docusauruksen konfiguraatio (`docusaurus.config.js`):
        *   [ ] Varmista sivuston nimi (`title`), tagline, `organizationName`, `projectName` (nämä voivat tulla osittain Cookiecutter-muuttujista).
        *   [ ] **TÄRKEÄÄ GitHub Pagesia varten:** Aseta `baseUrl` oikein (esim. `/projektin-nimi/` tai `/` jos käytössä custom domain tai käyttäjäsivu).
        *   [ ] Määritä `url` (esim. `https://kayttajanimi.github.io`).
    *   [ ] Muokkaa tarvittaessa sivupalkin navigaatiota (`sidebars.js`).
    *   [ ] Testaa Docusaurus-sivustoa paikallisesti: `npm run start`.

**3. API-Dokumentaation ja Muun Sisällön Integrointi**
    *   [ ] Jos projektissa on API, suunnittele ja toteuta sen dokumentointi.
    *   [ ] Harkitse API-dokumentaation automaattista generointia työkaluilla kuten `pdoc` (Pythonille), `Sphinx`, tai vastaavilla ja sen muuntamista/integrointia Markdown-muotoon Docusaurusta varten.
    *   [ ] Lisää muu tarvittava dokumentaatio (käyttöohjeet, tutoriaalit, konseptit).

**4. Versionhallinta ja GitHub**
    *   [ ] Varmista, että kaikki tarvittavat tiedostot on lisätty Gitiin (Cookiecutterin luoma `.gitignore` auttaa tässä).
    *   [ ] Tee commit: `git add .` ja `git commit -m "Alustettu dokumentaatioprojekti Cookiecutter-templatella ja lisätty perussisältö"`.
    *   [ ] Luo GitHub-repositorio projektille (esim. `gh repo create <repositoryn-nimi> --public --source=. --remote=origin --push` jos et ole vielä tehnyt ja olet projektin juurihakemistossa).
    *   [ ] Työnnä muutokset GitHub-repositorioosi (jos et tehnyt sitä `gh repo create` -komennon yhteydessä): `git push -u origin main` (tai mikä päähaarasi onkaan).

**5. CI/CD-putken (GitHub Actions) Viimeistely ja Testaus**
    *   [ ] Tarkista ja viimeistele Cookiecutterin generoima CI/CD-workflow-tiedosto (`.github/workflows/deploy-docs.yml` tai vastaava).
    *   [ ] Varmista, että workflow:
        *   [ ] Triggeröityy oikein (esim. `on: push: branches: [ main ]`).
        *   [ ] Käyttää `ubuntu-latest` (tai sopivaa ajastinta).
        *   [ ] Noutaa koodin: `actions/checkout@v4`.
        *   [ ] Asentaa Node.js: `actions/setup-node@v4` (määritä sopiva Node-versio, esim. `18` tai `20`).
        *   [ ] Asentaa Docusaurus-riippuvuudet Docusaurus-kansiossa: `npm ci` (suositeltu `npm install`:in sijaan CI:ssä).
        *   [ ] Rakentaa Docusaurus-sivuston Docusaurus-kansiossa: `npm run build`.
        *   [ ] Julkaisee rakennetun sivuston GitHub Pagesiin käyttäen esim. `peaceiris/actions-gh-pages@v3` tai uudempaa:
            *   [ ] Määritä `github_token: ${{ secrets.GITHUB_TOKEN }}`.
            *   [ ] Määritä `publish_dir: ./docs-site/build` (tai Docusauruksen build-kansion polku suhteessa repositorion juureen).
    *   [ ] Testaa CI/CD-putki tekemällä pieni muutos dokumentaatioon ja työntämällä se päähaaraan. Varmista, että GitHub Pages -sivusto päivittyy.
